security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: null }

        my_ldap:
            ldap:
                service: Symfony\Component\Ldap\Ldap
                base_dn: '%env(resolve:LDAP_SEARCH_BASEDN)%'
                search_dn: '%env(resolve:LDAP_SEARCH_USER)%'
                search_password: '%env(resolve:LDAP_SEARCH_PASSWORD)%'
                default_roles: ROLE_USER
                #uid_key: cn
                uid_key: sAMAccountName

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

            form_login_ldap:
                provider: my_ldap
                login_path: login
                check_path: login
                service: Symfony\Component\Ldap\Ldap
                dn_string: '%env(resolve:LDAP_LOGIN_STRING)%'
            logout: true

        main:
            form_login_ldap:
                provider: my_ldap
                login_path: login
                check_path: login
                service: Symfony\Component\Ldap\Ldap
                dn_string: '%env(resolve:LDAP_LOGIN_STRING)%'
            logout: true

            anonymous: true 

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

    ldap_server: '%env(resolve:LDAP_SERVER)%'
    ldap_server_port: '%env(resolve:LDAP_SERVER_PORT)%'
    ldap_user: '%env(resolve:LDAP_SEARCH_USER)%'
    ldap_password: '%env(resolve:LDAP_SEARCH_PASSWORD)%'
    ldap_search_basedn: '%env(resolve:LDAP_SEARCH_BASEDN)%'

    # each type of user is allowed to his own sections
    users_admin: '%env(resolve:USERS_ADMIN)%'
    users_manager: '%env(resolve:USERS_MANAGER)%'
    users_it: '%env(resolve:USERS_IT)%'
    users_beta: '%env(resolve:USERS_BETA)%'
    users_ufficio_personale: '%env(resolve:USERS_UFFICIO_PERSONALE)%'

    users_newaccount_admin: '%env(resolve:USERS_NEWACCOUNT_ADMIN)%'
    newaccount_mailstonotify: '%env(resolve:NEWACCOUNT_MAILSTONOTIFY)%'

    account_current_db_format_version: '%env(resolve:ACCOUNT_CURRENT_DB_FORMAT_VERSION)%'
    staff_current_db_format_version: '%env(resolve:STAFF_CURRENT_DB_FORMAT_VERSION)%'

    staff_import_exceptions: '%env(resolve:STAFF_IMPORT_EXCEPTIONS)%'

    export_personale_filename: '%env(resolve:EXPORT_PERSONALE_FILENAME)%'
    export_personale_path_log: '%env(resolve:EXPORT_PERSONALE_PATH_LOG)%'
    export_personale_path_sipra2: '%env(resolve:EXPORT_PERSONALE_PATH_SIPRA2)%'

    export_newaccountv1_filename: '%env(resolve:EXPORT_NEWACCOUNTV1_FILENAME)%'

    date_format: '%env(resolve:DATE_FORMAT)%'
    date_format_for_filename: '%env(resolve:DATE_FORMAT_FOR_FILENAME)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # config/services.yaml - LDAP
    Symfony\Component\Ldap\Ldap:
        arguments: ['@Symfony\Component\Ldap\Adapter\ExtLdap\Adapter']
    Symfony\Component\Ldap\Adapter\ExtLdap\Adapter:
        arguments:
            -   host: '%env(resolve:LDAP_SERVER)%'
                port: '%env(resolve:LDAP_SERVER_PORT)%'
                # encryption: tls
                options:
                    protocol_version: '%env(resolve:LDAP_VERSION)%'
                    referrals: false

    convertsurnamenametousernamedata.convert:
        class: App\Services\ConvertSurnameNameToUsernameData
        arguments: []
